Blocks are as you likely already know, the literal building blocks of the blockchain. So, what is inside a block exactly? The primary purpose of a block is to record transactions. In this simplified example block here, we can see the list of transactions that are included. In our paper blockchain example from module one, a block was a single piece of paper listing a day's transactions in ledger format. This example contains just seven transactions. Bitcoin blocks on the other hand contains somewhere up to 2,000 transactions per block, but this number varies between different blockchains and depends on block size limits. Block sizes are usually limited in order to prevent network congestion. Bitcoin currently has a block size limit of one megabyte. Every block has a unique number, also called its height. Since the blockchain is linear, these numbers again or heights increment. There can be only one block at a given height. Blocks also contain a timestamp, a strange number called a nonce, some other information not listed here and critically a hash of the previous block in the chain, which we'll talk more about soon. Now, we have to talk about one of the most important concepts in blockchain, validity. You see, not all blocks are created equal, the vast majority of blocks are invalid. But what does that mean exactly? You've probably heard of Bitcoin miners. Well, finding a valid block is the hard work that those miners are doing when they mine. Blockchains have what's called a difficulty, which is essentially an arbitrary setting that determines how hard it is to create blocks. This is where all the value comes from. If anyone could just create blocks and throw them on the chain, there would be no value there, and networks would never agree on which blocks should go on the chain. Having created a block means you must have done a bunch of work. That's what proof-of-work means. By finding a block that is valid, you have proven that work has been done. For blockchains like Bitcoin and Ethereum, the difficulty level can change in order to ensure that blocks are created at regular intervals. So, how does that all work? A block is only defined as valid if the hash value of the entire block, the hash value being a number, is below another threshold number. That threshold being set by the difficulty. So, we take our block, and we hash the whole thing. When we hash it, we get a unique signature for all the data it contains. If you change any of the data, it necessarily changes the hash, just like we saw in previous lessons. The way you determine if this block is valid, is you simply ask is this block's hash below the difficulty threshold? We can see that our block's hash is larger than our threshold number, so this block is not valid. In our example we need the first three digits of the hashed to be zero for the block to be considered valid. Like what we see in the previous block's hash. The greater the difficulty, the lower the hash output number would have to be for the block to be valid. Since hashes are effectively random, lower values are harder to find. It's like rolling a die. It's harder to roll a two or below than it is to roll a three or below you can think of each hash digit as being like rolling a 16-sided die. To get three zeros like we need, you'd have to roll three 16-sided dice and get three once, since there's no zeros on a die. As you can imagine you'd have to roll the dice quite a few times around 4,000 times for that to happen. But in order to do that with our block, we don't roll dice, we can only change the data and see if we happen to get a valid hash, and do it over and over again. But what data can you change in your block? It contains important transaction data that you can't alter. Well, this is where the nonce comes in. The nonce is there just so that miners have a piece of data that they can essentially play with. They can change it randomly to change the block's output hash until they luck out and happened to find one that is below the required difficulty threshold. Once they have found a nonce that results in their block's hash being below the difficulty threshold, the block is finally considered valid and it can be broadcast to the network with that miner taking a reward for their effort. This process is purely based on chance. Miners just try over and over again changing the nonce and rehashing the block and hoping that they will luck out and find a hash below the threshold number. In our example, we just have to find a hash starting with three zeroes. Currently on the Bitcoin blockchain, miners have to find hashes starting with 19 zeroes. That's about as hard as rolling 36-sided dice and getting all sixes. So, finding a block is really hard and a big deal. It's so difficult that with a top of the line mining computer of today running 24/7, you could expect to mine a valid block about once every 40 years. Note that if you try to change any of the data in a block once you've mined it and found a working nonce, you render your block invalid once again, and have to start all over finding a new nonce that goes with the new data. This is why blocks are so hard to alter after they've been mined. As a note, the rewards for mining can be substantial, the current reward for finding a block in the Bitcoin network is 12.5 Bitcoin, or currently around $80,000. It's no wonder that there's a lot of competition. When other nodes on the network received a valid block, they can very easily check its validity by simply hashing the block themselves, and ensuring that it's below the target difficulty. If it is, it's added to their blockchain and work starts on the next block, and that next block will include that previous block's hash in its own data which ensures the continuity of the blockchain.